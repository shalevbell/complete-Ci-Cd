name: MAIN_CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  main_tests:
    runs-on: ubuntu-latest

    env:
      REQ_FILE: app/requirements.txt

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'

    - name: Install dependencies with pip
      run: |
        echo "Requirements to be downloaded:"
        cat $REQ_FILE
        pip install -r $REQ_FILE

    - name: Run tests
      run: |
        python -m unittest discover -s tests

  build:
    runs-on: ubuntu-latest
    needs: main_tests
    if: success()
    
    env:
      IMAGE_NAME: shalevbell/weatherapp
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set next image tag
        id: get-tag
        run: |
          HUB_RESPONSE=$(curl -s "https://registry.hub.docker.com/v2/repositories/${IMAGE_NAME}/tags")
          TAG=$(echo $HUB_RESPONSE | jq -r '.results | map(.name) | sort | last')
          echo "Current tag: $TAG"
          
          if [[ -z "$TAG" ]]; then
            TAG=1.0
          fi

          IFS='.' read -r major minor <<< "$TAG"
          new_minor=$((minor + 1))
          NEW_TAG="${major}.${new_minor}"
          echo "New tag: $NEW_TAG"

          echo "tag=$NEW_TAG" >> $GITHUB_ENV

      - name: Build and save Docker image
        run: |
          docker build -t $IMAGE_NAME:${tag} .
          docker save $IMAGE_NAME:${tag} -o weatherImage.tar
  
      - name: Artifact image for upload job 
        uses: actions/upload-artifact@v3
        with:
          name: docker-image
          path: weatherImage.tar
